//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MyBundleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MyBundle), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("LoadFromFile", LoadFromFile);
		L.RegFunction("LoadAssetAsync", LoadAssetAsync);
		L.RegFunction("GetAssetAsync", GetAssetAsync);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("assetBundleRequests", get_assetBundleRequests, set_assetBundleRequests);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFromFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MyBundle obj = (MyBundle)ToLua.CheckObject<MyBundle>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			MyBundle o = obj.LoadFromFile(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MyBundle obj = (MyBundle)ToLua.CheckObject<MyBundle>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.LoadAssetAsync(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAssetAsync(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MyBundle obj = (MyBundle)ToLua.CheckObject<MyBundle>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Object o = obj.GetAssetAsync(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_assetBundleRequests(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyBundle obj = (MyBundle)o;
			System.Collections.Generic.Dictionary<string,UnityEngine.AssetBundleRequest> ret = obj.assetBundleRequests;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleRequests on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_assetBundleRequests(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyBundle obj = (MyBundle)o;
			System.Collections.Generic.Dictionary<string,UnityEngine.AssetBundleRequest> arg0 = (System.Collections.Generic.Dictionary<string,UnityEngine.AssetBundleRequest>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,UnityEngine.AssetBundleRequest>));
			obj.assetBundleRequests = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index assetBundleRequests on a nil value");
		}
	}
}

