//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ClisocketWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Clisocket), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Headercreate", Headercreate);
		L.RegFunction("Sendmessage", Sendmessage);
		L.RegFunction("MyGetKey", MyGetKey);
		L.RegFunction("GetResponseHeader", GetResponseHeader);
		L.RegFunction("GetResponseBody", GetResponseBody);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, set_Instance);
		L.RegVar("keys", get_keys, set_keys);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Headercreate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			BODYTYPE arg1 = (BODYTYPE)ToLua.CheckObject(L, 2, typeof(BODYTYPE));
			Clisocket.Headercreate(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Sendmessage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			BODYTYPE arg0 = (BODYTYPE)ToLua.CheckObject(L, 1, typeof(BODYTYPE));
			Google.Protobuf.IMessage arg1 = (Google.Protobuf.IMessage)ToLua.CheckObject<Google.Protobuf.IMessage>(L, 2);
			Clisocket.Sendmessage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MyGetKey(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Clisocket.op arg0 = StackTraits<Clisocket.op>.Check(L, 1);
			bool o = Clisocket.MyGetKey(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResponseHeader(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			byte[] o = Clisocket.GetResponseHeader(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResponseBody(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			byte[] o = Clisocket.GetResponseBody(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, Clisocket.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_keys(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Clisocket.keys);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Instance(IntPtr L)
	{
		try
		{
			Clisocket arg0 = (Clisocket)ToLua.CheckObject<Clisocket>(L, 2);
			Clisocket.Instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_keys(IntPtr L)
	{
		try
		{
			System.Collections.Generic.Dictionary<Net.PlayerOpt,Clisocket.op> arg0 = (System.Collections.Generic.Dictionary<Net.PlayerOpt,Clisocket.op>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<Net.PlayerOpt,Clisocket.op>));
			Clisocket.keys = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

