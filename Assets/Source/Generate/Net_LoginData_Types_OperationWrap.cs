//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Net_LoginData_Types_OperationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Net.LoginData.Types.Operation));
		L.RegVar("Login", get_Login, null);
		L.RegVar("Register", get_Register, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<Net.LoginData.Types.Operation>.Check = CheckType;
		StackTraits<Net.LoginData.Types.Operation>.Push = Push;
	}

	static void Push(IntPtr L, Net.LoginData.Types.Operation arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(Net.LoginData.Types.Operation), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Login(IntPtr L)
	{
		ToLua.Push(L, Net.LoginData.Types.Operation.Login);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Register(IntPtr L)
	{
		ToLua.Push(L, Net.LoginData.Types.Operation.Register);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Net.LoginData.Types.Operation o = (Net.LoginData.Types.Operation)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

